// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "10/19/2017 02:33:20"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (SystemVerilog) only
// 

`timescale 1 ps/ 1 ps

module exercise26 (
	SW,
	LEDG);
input 	logic [1:0] SW ;
output 	logic [7:6] LEDG ;

// Design Ports Information
// LEDG[6]	=>  Location: PIN_D12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LEDG[7]	=>  Location: PIN_D13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[1]	=>  Location: PIN_C14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[0]	=>  Location: PIN_C13,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("exercise26_7_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \LEDG[6]~output_o ;
wire \LEDG[7]~output_o ;
wire \SW[1]~input_o ;
wire \SW[0]~input_o ;
wire \Mux2~0_combout ;
wire \Mux2~0clkctrl_outclk ;
wire \LEDG[6]$latch~combout ;
wire \LEDG[7]$latch~combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X52_Y73_N23
cycloneive_io_obuf \LEDG[6]~output (
	.i(\LEDG[6]$latch~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[6]~output .bus_hold = "false";
defparam \LEDG[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X54_Y73_N9
cycloneive_io_obuf \LEDG[7]~output (
	.i(\LEDG[7]$latch~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[7]~output .bus_hold = "false";
defparam \LEDG[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X52_Y73_N1
cycloneive_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X54_Y73_N1
cycloneive_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X55_Y72_N0
cycloneive_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (\SW[1]~input_o ) # (\SW[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\SW[1]~input_o ),
	.datad(\SW[0]~input_o ),
	.cin(gnd),
	.combout(\Mux2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = 16'hFFF0;
defparam \Mux2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: CLKCTRL_G11
cycloneive_clkctrl \Mux2~0clkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Mux2~0_combout }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Mux2~0clkctrl_outclk ));
// synopsys translate_off
defparam \Mux2~0clkctrl .clock_type = "global clock";
defparam \Mux2~0clkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X52_Y72_N8
cycloneive_lcell_comb \LEDG[6]$latch (
// Equation(s):
// \LEDG[6]$latch~combout  = (GLOBAL(\Mux2~0clkctrl_outclk ) & (!\SW[1]~input_o )) # (!GLOBAL(\Mux2~0clkctrl_outclk ) & ((\LEDG[6]$latch~combout )))

	.dataa(gnd),
	.datab(\SW[1]~input_o ),
	.datac(\LEDG[6]$latch~combout ),
	.datad(\Mux2~0clkctrl_outclk ),
	.cin(gnd),
	.combout(\LEDG[6]$latch~combout ),
	.cout());
// synopsys translate_off
defparam \LEDG[6]$latch .lut_mask = 16'h33F0;
defparam \LEDG[6]$latch .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X55_Y72_N18
cycloneive_lcell_comb \LEDG[7]$latch (
// Equation(s):
// \LEDG[7]$latch~combout  = (GLOBAL(\Mux2~0clkctrl_outclk ) & ((!\SW[0]~input_o ))) # (!GLOBAL(\Mux2~0clkctrl_outclk ) & (\LEDG[7]$latch~combout ))

	.dataa(gnd),
	.datab(\LEDG[7]$latch~combout ),
	.datac(\SW[0]~input_o ),
	.datad(\Mux2~0clkctrl_outclk ),
	.cin(gnd),
	.combout(\LEDG[7]$latch~combout ),
	.cout());
// synopsys translate_off
defparam \LEDG[7]$latch .lut_mask = 16'h0FCC;
defparam \LEDG[7]$latch .sum_lutc_input = "datac";
// synopsys translate_on

assign LEDG[6] = \LEDG[6]~output_o ;

assign LEDG[7] = \LEDG[7]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
